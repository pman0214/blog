<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pLog</title><link>http://pman0214.github.io/blog/</link><description></description><atom:link href="http://pman0214.github.io/blog/feeds/rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 21 May 2015 12:18:00 +0900</lastBuildDate><item><title>RedmineをGitHubと連携させる</title><link>http://pman0214.github.io/blog/redmine-github.html</link><description>&lt;h1&gt;概要&lt;/h1&gt;
&lt;p&gt;&lt;a href="/redmine-install.html"&gt;先日インストールしたRedmine&lt;/a&gt;だが、gitレポジトリの登録はできるものの、その機能は十分とは言えない状況だ。&lt;/p&gt;
&lt;p&gt;svnレポジトリの場合はユーザ名・パスワードを使って自動的にcheckoutできるようなのだが、gitレポジトリではそれができないようだ。
具体的には、gitの場合にはシステム上、すなわちサーバ上に存在するレポジトリのみを登録できるようになっている。いまだ開発途上ということだろう。&lt;/p&gt;
&lt;p&gt;このため、GitHubと連携させるためには一手間が必要となる。&lt;/p&gt;
&lt;h1&gt;Redmineへのweb-hookプラグインの導入&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;が入っていなかったら&lt;code&gt;sudo apt-get install git-core&lt;/code&gt;で導入しておく。&lt;/p&gt;
&lt;p&gt;GitHubからのweb-hookを使うためにはjsonを処理する必要があるため、json用のgemを導入しておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% alias sr=&amp;quot;sudo -u redmine&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;% cd /home/redmine/redmine&lt;/span&gt;
&lt;span class="c"&gt;% sr vi Gemfile.local&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;json&lt;/span&gt;&amp;quot; ← ★追加する
&lt;span class="c"&gt;% sr bundle install --without development test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;自分の環境では&lt;code&gt;json&lt;/code&gt;が2回以上あると怒られたので、すでにどこかで書いてあったようだ。実害はないのでいいが。&lt;/p&gt;
&lt;p&gt;GitHub hookプラグインを導入する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% cd /home/redmine/redmine/plugins&lt;/span&gt;
&lt;span class="c"&gt;% sr git clone https://github.com/koppen/redmine_github_hook.git&lt;/span&gt;
&lt;span class="c"&gt;% cd redmine_github_hook&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle install --without development test&lt;/span&gt;
&lt;span class="c"&gt;% cd ../..&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle install --without development test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Redmineを再起動する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo /etc/init.d/redmine restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Redmineに管理者アカウントでログインすれば、管理＞プラグインで&lt;code&gt;Redmine Github Hook plugin&lt;/code&gt;が見えるはず。&lt;/p&gt;
&lt;h1&gt;RedmineでのGitHubレポジトリの追加&lt;/h1&gt;
&lt;p&gt;GitHubのレポジトリを直接持ってくることはできないため、サーバ上でcloneしておく必要がある。
ここでは非公開レポジトリを想定してデプロイキーを使ってcloneすることにする。&lt;/p&gt;
&lt;p&gt;まずはssh鍵を作成。nginx+unicornでredmineを起動しているので、redmineを実行しているユーザは&lt;code&gt;redmine&lt;/code&gt;である。
このユーザ用のssh鍵を作成し、デプロイキーとして登録する。
ssh鍵の作成ではパスフレーズを設定してはいけない。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% cd /home/redmine&lt;/span&gt;
&lt;span class="c"&gt;% alias sr=&amp;quot;sudo -u redmine&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;% sr mkdir .ssh&lt;/span&gt;
&lt;span class="c"&gt;% sr chmod 700 .ssh&lt;/span&gt;
&lt;span class="c"&gt;% sr ssh-keygen -t ecdsa&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;できあがった公開鍵&lt;code&gt;/home/redmine/.ssh/id_ecdsa.pub&lt;/code&gt;をGitHubの当該レポジトリにデプロイキーとして登録する。&lt;/p&gt;
&lt;p&gt;レポジトリ用のディレクトリを作成してcloneしておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sr mkdir repos&lt;/span&gt;
&lt;span class="c"&gt;% cd repos&lt;/span&gt;
&lt;span class="c"&gt;% sr git clone --bare git@github.com/xxxxxx/hoge.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Redmineにcloneしたレポジトリを追加する。
パスは&lt;code&gt;/home/redmine/repos/hoge.git&lt;/code&gt;とすれば良い。
この時点でレポジトリが表示できるはず。&lt;/p&gt;
&lt;p&gt;あとはGitHubにweb-hookを登録すればOK。ここから未テスト。
URLは&lt;code&gt;http(s)://debianサーバ/github_hook?project_id=[プロジェクトの識別子]&lt;/code&gt;とする。
当然ながらdebianサーバは外部からアクセスできるように設定しておく。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pman0214</dc:creator><pubDate>Thu, 21 May 2015 12:18:00 +0900</pubDate><guid>tag:pman0214.github.io,2015-05-21:blog/redmine-github.html</guid><category>redmine</category><category>github</category></item><item><title>Debian jessieにRedmineをインストールする</title><link>http://pman0214.github.io/blog/redmine-install.html</link><description>&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;debian jessie 8.0&lt;ul&gt;
&lt;li&gt;debianマシンはすでに用意してあるものとする。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;redmine 2.6.5&lt;/li&gt;
&lt;li&gt;backlogs 1.0.6&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;redmine本体&lt;/h2&gt;
&lt;p&gt;必要なツール類をインストールする。MySQLを使うことが多いのだが、個人的な好みによりPostgreSQLを使用することにする。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo apt-get install postgresql ruby ruby-dev ruby-pg libpq-dev \&lt;/span&gt;
  &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;essential&lt;/span&gt; &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="n"&gt;imagemagick&lt;/span&gt; &lt;span class="n"&gt;libmagickwand&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt; &lt;span class="n"&gt;subversion&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PostgreSQLに接続してユーザやDBの作成を行う。&lt;code&gt;password&lt;/code&gt;の部分はもちろん変更すべし。パスワードに記号が入っているとredmineで接続できない場合があるので、英数に限定する方がいいかも。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo -u postgres psql&lt;/span&gt;
&lt;span class="n"&gt;postgres&lt;/span&gt;# &lt;span class="n"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;ROLE&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt; &lt;span class="n"&gt;LOGIN&lt;/span&gt; &lt;span class="n"&gt;ENCRYPTED&lt;/span&gt; &lt;span class="n"&gt;PASSWORD&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;NOINHERIT&lt;/span&gt; &lt;span class="n"&gt;VALID&lt;/span&gt; &lt;span class="n"&gt;UNTIL&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;infinity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;postgres&lt;/span&gt;# &lt;span class="n"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt; &lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;ENCODING&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UTF8&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;OWNER&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;postgres&lt;/span&gt;# &lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Linuxにユーザ&lt;code&gt;redmine&lt;/code&gt;を追加する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo adduser --disabled-login --gecos &amp;#39;Redmine&amp;#39; redmine&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;パスワードを設定しておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo passwd redmine&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sudoグループにユーザ&lt;code&gt;redmine&lt;/code&gt;を加えておく。Debianでは&lt;code&gt;visudo&lt;/code&gt;でユーザを追加せず、このグループにユーザを追加するだけでsudoできるように設定されている。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo vi /etc/group&lt;/span&gt;
&lt;span class="c"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt; ← ★&lt;span class="n"&gt;redmine&lt;/span&gt;を追加する
&lt;span class="c"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.redmine.org/"&gt;Redmineの公式web&lt;/a&gt;からソースをゲットする。Backlogsは2.2.4と2.3.2に対応と書かれているが、今回は執筆時点での最新版2.6.5にBacklogsを導入するという暴挙に出る。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo -u redmine&lt;/code&gt;を多用するのでaliasしておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% alias sr=&amp;#39;sudo -u redmine&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;% cd /home/redmine&lt;/span&gt;
&lt;span class="c"&gt;% sr wget http://www.redmine.org/releases/redmine-2.6.5.tar.gz&lt;/span&gt;
&lt;span class="c"&gt;% sr tar zxvf redmine-2.6.5.tar.gz&lt;/span&gt;
&lt;span class="c"&gt;% sr ln -s redmine-2.6.5 redmine&lt;/span&gt;
&lt;span class="c"&gt;% cd redmine&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;database.ymlのテンプレートをコピーし、設定を施す。&lt;/p&gt;
&lt;p&gt;MySQLの設定をコメントアウトしてPostgreSQLの設定を有効化し、設定を変更する。
testもコメントアウトしてしまってOK。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sr cp config/database.yml.example config/database.yml&lt;/span&gt;
&lt;span class="c"&gt;% sr vi config/database.yml&lt;/span&gt;
&lt;span class="c"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;production&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;adapter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgresql&lt;/span&gt;
  &lt;span class="n"&gt;database&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt;
  &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;
  &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt; ← ★&lt;span class="n"&gt;postgres&lt;/span&gt;になっているので変更する
  &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;password&lt;/span&gt;&amp;quot; ← ★パスワードは最初に&lt;span class="n"&gt;PostgreSQL&lt;/span&gt;に設定したもの。
&lt;span class="c"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;bundlerを導入してbundleする。システムのrubyを使っているのでbundlerはsudoで入れてしまう。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo gem install bundler&lt;/span&gt;
&lt;span class="c"&gt;% sr bundle install --without development test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;つづいてrake。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sr rake generate_secret_token&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production rake db:migrate&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production rake redmine:load_default_data&lt;/span&gt;
&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="n"&gt;Language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ja&lt;/span&gt; ← ★日本語を指定
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;試しにサーバを動かしてみる。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sr ruby script/rails server webrick -e production&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この状態で&lt;code&gt;http://debianサーバ:3000/&lt;/code&gt;に接続して、redmineが見られればOK。
Ctrl-Cでサーバを停止できる。&lt;/p&gt;
&lt;h2&gt;ログ消去&lt;/h2&gt;
&lt;p&gt;ログが永遠に作成されたら嫌なので、logrotateを使って自動的に消去する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo vi /etc/logrotate.d/redmine&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;rotate&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="nb"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;
    &lt;span class="n"&gt;compress&lt;/span&gt;
    &lt;span class="n"&gt;missingok&lt;/span&gt;
    &lt;span class="n"&gt;notifempty&lt;/span&gt;
    &lt;span class="n"&gt;copytruncate&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;テストしてみる。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo logrotate -dv /etc/logrotate.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;nginx + unicornにする&lt;/h1&gt;
&lt;p&gt;WEBrickを使うのはアレなのでnginxに乗っける。&lt;/p&gt;
&lt;p&gt;まずはunicornをbundleする。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sr vi Gemfile.local&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;unicorn&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;unicornの設定ファイルを作成する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sr vi config/unicorn.rb&lt;/span&gt;
&lt;span class="n"&gt;worker_processes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;working_directory&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&amp;quot;

&lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;unicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RAILS_ROOT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;listen&lt;/span&gt; &amp;quot;&lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8079&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tcp_nopush&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;

&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;unicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RAILS_ROOT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;

&lt;span class="n"&gt;preload_app&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;

&lt;span class="n"&gt;stdout_path&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;unicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RAILS_ROOT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;stderr_path&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;unicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RAILS_ROOT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;GC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to&lt;/span&gt;?&lt;span class="p"&gt;(:&lt;/span&gt;&lt;span class="n"&gt;copy_on_write_friendly&lt;/span&gt;&lt;span class="p"&gt;=)&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;GC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy_on_write_friendly&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;

&lt;span class="n"&gt;before_fork&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;defined&lt;/span&gt;?&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActiveRecord&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;ActiveRecord&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disconnect&lt;/span&gt;!

  &lt;span class="n"&gt;old_pid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;#&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;]}.&lt;/span&gt;&lt;span class="n"&gt;oldbin&lt;/span&gt;&amp;quot;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_pid&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;
      &lt;span class="n"&gt;begin&lt;/span&gt;
        &lt;span class="n"&gt;sig&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;worker_processes&lt;/span&gt; ? &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;QUIT&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;TTOU&lt;/span&gt;
        &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old_pid&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;rescue&lt;/span&gt; &lt;span class="n"&gt;Errno&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ENOENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Errno&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ESRCH&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;sleep&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;after_fork&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;defined&lt;/span&gt;?&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActiveRecord&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;ActiveRecord&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;establish_connection&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;initスクリプトを作成する。上の方の設定は自信無い。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo vi /etc/init.d/redmine&lt;/span&gt;
#!&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

### &lt;span class="n"&gt;BEGIN&lt;/span&gt; &lt;span class="n"&gt;INIT&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt;
# &lt;span class="n"&gt;Provides&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;          &lt;span class="n"&gt;redmine&lt;/span&gt;
# &lt;span class="n"&gt;Required&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    $&lt;span class="n"&gt;local_fs&lt;/span&gt; $&lt;span class="n"&gt;remote_fs&lt;/span&gt; $&lt;span class="n"&gt;network&lt;/span&gt; $&lt;span class="n"&gt;syslog&lt;/span&gt;
# &lt;span class="n"&gt;Required&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Stop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     $&lt;span class="n"&gt;local_fs&lt;/span&gt; $&lt;span class="n"&gt;remote_fs&lt;/span&gt; $&lt;span class="n"&gt;network&lt;/span&gt; $&lt;span class="n"&gt;syslog&lt;/span&gt;
# &lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
# &lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Stop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
# &lt;span class="n"&gt;Short&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt; &lt;span class="n"&gt;unicorn&lt;/span&gt;
# &lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;       &lt;span class="n"&gt;redmine&lt;/span&gt; &lt;span class="n"&gt;unicorn&lt;/span&gt;
# &lt;span class="n"&gt;chkconfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
### &lt;span class="n"&gt;END&lt;/span&gt; &lt;span class="n"&gt;INIT&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt;

&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;

# &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;
&lt;span class="n"&gt;ENVIROMENT&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;production&lt;/span&gt;
&lt;span class="n"&gt;APP_USER&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;redmine&lt;/span&gt;&amp;quot;

&lt;span class="n"&gt;ROOT_DIR&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&amp;quot;

&lt;span class="n"&gt;PID&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;$&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ROOT_DIR&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;unicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&amp;quot;
&lt;span class="n"&gt;CONF&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;$&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ROOT_DIR&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;unicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&amp;quot;

&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; $&lt;span class="n"&gt;PID&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;$&lt;span class="n"&gt;NAME&lt;/span&gt; &lt;span class="n"&gt;already&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;fi&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;start&lt;/span&gt; $&lt;span class="n"&gt;NAME&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;cd&lt;/span&gt; $&lt;span class="n"&gt;ROOT_DIR&lt;/span&gt;
  &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; $&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;APP_USER&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt; &lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;unicorn_rails&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; $&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CONF&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt; $&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ENVIROMENT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; ! &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; $&lt;span class="n"&gt;PID&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;$&lt;span class="n"&gt;NAME&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;fi&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;stop&lt;/span&gt; $&lt;span class="n"&gt;NAME&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;QUIT&lt;/span&gt; `&lt;span class="nb"&gt;cat&lt;/span&gt; $&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;PID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;`
  &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; $&lt;span class="n"&gt;PID&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;force_stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; ! &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; $&lt;span class="n"&gt;PID&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;$&lt;span class="n"&gt;NAME&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;fi&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;stop&lt;/span&gt; $&lt;span class="n"&gt;NAME&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;TERM&lt;/span&gt; `&lt;span class="nb"&gt;cat&lt;/span&gt; $&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;PID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;`
  &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; $&lt;span class="n"&gt;PID&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; ! &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; $&lt;span class="n"&gt;PID&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;$&lt;span class="n"&gt;NAME&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;start&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;fi&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;reload&lt;/span&gt; $&lt;span class="n"&gt;NAME&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;HUP&lt;/span&gt; `&lt;span class="nb"&gt;cat&lt;/span&gt; $&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;PID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;`
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;stop&lt;/span&gt;
    &lt;span class="n"&gt;start&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &amp;quot;$&lt;span class="mi"&gt;1&lt;/span&gt;&amp;quot; &lt;span class="n"&gt;in&lt;/span&gt;
  &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;start&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stop&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="n"&gt;force&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;force_stop&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;reload&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;restart&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Syntax&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;release&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;force&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&amp;quot;
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="n"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;permissionを設定し、スタートしておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo chmod 755 /etc/init.d/redmine&lt;/span&gt;
&lt;span class="c"&gt;% sudo /etc/init.d/redmine start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;自動起動設定もしておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo update-rc.d redmine defaults&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;nginxをインストールし、redmineサイト用の設定ファイルを追加する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% sudo apt-get install nginx&lt;/span&gt;
&lt;span class="c"&gt;% sudo vi /etc/nginx/sites-available/redmine&lt;/span&gt;
&lt;span class="n"&gt;upstream&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8079&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hogehoge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; ← ★ここは自分のものにあわせて変更する
  &lt;span class="n"&gt;server_tokens&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;client_max_body_size&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  # &lt;span class="n"&gt;individual&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="n"&gt;logs&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;gitlab&lt;/span&gt; &lt;span class="n"&gt;vhost&lt;/span&gt;
  &lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine_access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;error_log&lt;/span&gt;   &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;try_files&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;FORWARDED_PROTO&lt;/span&gt; $&lt;span class="n"&gt;http_x_forwarded_proto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;Host&lt;/span&gt;              $&lt;span class="n"&gt;http_host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Real&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;         $&lt;span class="n"&gt;http_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Forwarded&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;For&lt;/span&gt;   $&lt;span class="n"&gt;http_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_intercept_errors&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;404.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;422&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;422.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="mi"&gt;503&lt;/span&gt; &lt;span class="mi"&gt;504&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;500.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;サイトを有効化してnginxを起動する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% cd /etc/nginx/sites-enabled&lt;/span&gt;
&lt;span class="c"&gt;% sudo ln -s ../sites-available/redmine&lt;/span&gt;
&lt;span class="c"&gt;% sudo /etc/init.d/nginx restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この状態で&lt;code&gt;http://debianサーバ/&lt;/code&gt;でredmineにアクセスできるはず。&lt;/p&gt;
&lt;h1&gt;Backlogsプラグイン&lt;/h1&gt;
&lt;h2&gt;Redminの設定&lt;/h2&gt;
&lt;p&gt;Backlogsの導入時にはBacklogs用のトラッカーを設定する必要があるので、Redmineの設定をしておく。&lt;/p&gt;
&lt;p&gt;まずはRedmineにログインする。管理者の初期設定は、ユーザ・パスワードともに&lt;code&gt;admin&lt;/code&gt;となっている。
&lt;strong&gt;「管理＞ユーザー」からユーザ&lt;code&gt;admin&lt;/code&gt;のパスワードを必ず変更する。&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;ロールと権限&lt;/h4&gt;
&lt;p&gt;必要なものを登録しておく。&lt;/p&gt;
&lt;p&gt;複雑にすると使いにくくなるので、個人的には以下の設定で十分だと思う。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理者 → 「メンバー」に名前変更&lt;/li&gt;
&lt;li&gt;開発者 → 削除&lt;/li&gt;
&lt;li&gt;報告書 → 削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;トラッカー&lt;/h4&gt;
&lt;p&gt;「管理＞トラッカー」から以下のトラッカーを追加する。最初からあるものは消してしまっても構わない。バグは最初からあるものを使って構わない。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;タスク&lt;/li&gt;
&lt;li&gt;ストーリー&lt;/li&gt;
&lt;li&gt;バグ&lt;/li&gt;
&lt;li&gt;課題&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;チケットのステータス&lt;/h4&gt;
&lt;p&gt;「管理＞チケットのステータス」から以下のステータスを作成する。最初からあるものは消す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Todo（デフォルト値）&lt;/li&gt;
&lt;li&gt;Doing&lt;/li&gt;
&lt;li&gt;Done（終了したチケット）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;ワークフロー&lt;/h4&gt;
&lt;p&gt;全部のトラッカーに関してステータスを相互に変更できるように設定する。使い方にもよるが、基本的には非メンバや匿名ユーザは変更できないようにしてしまって問題ない。&lt;/p&gt;
&lt;h2&gt;Backlogsの組込み&lt;/h2&gt;
&lt;p&gt;最新版を取得してくる。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% alias sr=&amp;quot;sudo -u redmine&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;% cd /home/redmine/redmine/plugins&lt;/span&gt;
&lt;span class="c"&gt;% sr git clone git://github.com/backlogs/redmine_backlogs.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;redmineに導入する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% cd redmine_backlogs&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle install --without development test&lt;/span&gt;
&lt;span class="c"&gt;% cd ../..&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle install --without development test&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle exec rake db:migrate&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle exec rake tmp:cache:clear&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle exec rake tmp:sessions:clear&lt;/span&gt;
&lt;span class="c"&gt;% sr RAILS_ENV=production bundle exec rake redmine:backlogs:install&lt;/span&gt;
&lt;span class="n"&gt;Which&lt;/span&gt; &lt;span class="n"&gt;trackers&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;stories&lt;/span&gt;?
  &lt;span class="mf"&gt;1.&lt;/span&gt; タスク
  &lt;span class="mf"&gt;2.&lt;/span&gt; ストーリー
  &lt;span class="mf"&gt;3.&lt;/span&gt; バグ
  &lt;span class="mf"&gt;4.&lt;/span&gt; 課題
&lt;span class="n"&gt;Separate&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; ← ★先ほど作った「ストーリー」を選択
&lt;span class="n"&gt;Which&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;?
  &lt;span class="mf"&gt;1.&lt;/span&gt; タスク
  &lt;span class="mf"&gt;2.&lt;/span&gt; バグ
  &lt;span class="mf"&gt;3.&lt;/span&gt; 課題
&lt;span class="n"&gt;Choose&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;choose&lt;/span&gt; &lt;span class="n"&gt;none&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; ← ★先ほど作った「タスク」を選択
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでBacklogsが使えるようになっているはず。&lt;/p&gt;
&lt;p&gt;最終的に「管理＞情報」では以下のように表示された。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;Redmine&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;                &lt;span class="mf"&gt;2.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stable&lt;/span&gt;
  &lt;span class="n"&gt;Ruby&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;                   &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p273&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnu&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;Rails&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;                  &lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;
  &lt;span class="n"&gt;Environment&lt;/span&gt;                    &lt;span class="n"&gt;production&lt;/span&gt;
  &lt;span class="n"&gt;Database&lt;/span&gt; &lt;span class="n"&gt;adapter&lt;/span&gt;               &lt;span class="n"&gt;PostgreSQL&lt;/span&gt;
&lt;span class="n"&gt;SCM&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;Subversion&lt;/span&gt;                     &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
  &lt;span class="n"&gt;Git&lt;/span&gt;                            &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
  &lt;span class="n"&gt;Filesystem&lt;/span&gt;                     
&lt;span class="n"&gt;Redmine&lt;/span&gt; &lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;redmine_backlogs&lt;/span&gt;               &lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pman0214</dc:creator><pubDate>Sat, 16 May 2015 15:00:00 +0900</pubDate><guid>tag:pman0214.github.io,2015-05-16:blog/redmine-install.html</guid><category>redmine</category><category>debian</category><category>backlogs</category></item><item><title>virtualenv環境のpythonをcronで呼ぶ</title><link>http://pman0214.github.io/blog/cron-python-virtualenv.html</link><description>&lt;h1&gt;概要&lt;/h1&gt;
&lt;p&gt;virtualenv環境で開発したPythonスクリプトをcronで呼び出したいとき、ライブラリとかをどうやって指定するのか分からなかったので考えてみた。&lt;/p&gt;
&lt;h1&gt;結論&lt;/h1&gt;
&lt;p&gt;以下のようなスクリプトを作っておき、これを呼び出せばOK。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;PROG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/hoge
&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$PROG_DIR&lt;/span&gt;/bin/activate

python &lt;span class="nv"&gt;$PROG_DIR&lt;/span&gt;/hoge.pyc
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h1&gt;解説というほどでもないけど&lt;/h1&gt;
&lt;p&gt;要するに、普段やっている&lt;code&gt;source bin/activate&lt;/code&gt;を呼んでおけばいいという話。&lt;/p&gt;
&lt;p&gt;なので上記のようなスクリプトを書いておけば対応できる。
引数がある場合にはスクリプトに引数を付ければOK。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;crontab -e&lt;/code&gt;で上記スクリプトの呼び出しを追加すれば試合終了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# m h dom mon dow       command
10 4 * * *              /usr/local/bin/hoge
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pman0214</dc:creator><pubDate>Wed, 06 May 2015 18:58:00 +0900</pubDate><guid>tag:pman0214.github.io,2015-05-06:blog/cron-python-virtualenv.html</guid><category>python</category><category>cron</category><category>virtualenv</category></item><item><title>EFIブートするUSBメモリでdebianをインストール</title><link>http://pman0214.github.io/blog/debian-install-efi.html</link><description>&lt;h1&gt;概要&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;EFIブートするUSBメモリを作成し、これを使ってdebianをインストールする。&lt;/li&gt;
&lt;li&gt;古いXserveをdebian化しようとした中での例。&lt;ul&gt;
&lt;li&gt;インストールできたものの、うまく起動しない状態で終わってます。多分ドライバ周り・・・。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;grubを導入したUSBメモリを用意してしまえば、カーネルや初期RAMディスク、ISOイメージを書き換えるだけでよくなる。この作業はUSBメモリのファイルを書き換えるだけなので、debian機は不要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;必要なもの&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2GBくらいのUSBメモリ&lt;ul&gt;
&lt;li&gt;中身は完全に消える。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;母艦となるdebian機&lt;ul&gt;
&lt;li&gt;VMでも構わないが、USBメモリをmountできないとダメ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;grubの準備&lt;/h2&gt;
&lt;p&gt;まずは母艦となるdebianでEFI対応のgrubを用意する。インストールしたいアーキテクチャに合わせたものを用意する。今回はx86の64bit版で。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install grub-efi-x86_64-bin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;USBメモリにパーティションを作る。&lt;code&gt;/dev/sdb&lt;/code&gt;の部分はUSBメモリのデバイス名を指定する。分からん場合は&lt;code&gt;sudo dmesg&lt;/code&gt;とかで調べるべし。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo fdisk /dev/sdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;あとはよしなに。FAT32にするのが良い。どんなマシンでもFAT32なら読めるみたいなので（確証なし）。partition IDをbにするとWin95 FAT32になる。&lt;/p&gt;
&lt;p&gt;FAT32でフォーマット。&lt;code&gt;-v&lt;/code&gt;は詳細表示、&lt;code&gt;-c&lt;/code&gt;は不良ブロック精査、&lt;code&gt;-F&lt;/code&gt;は形式。16にすればFAT16になる。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mkfs.vfat -v -c -F 32 /dev/sdb1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Q. mkfs.vfatなんてないんだけど。&lt;/li&gt;
&lt;li&gt;A. dosfstoolsを入れるべし。&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install dosfstools
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;USBメモリをマウントし、EFIのディレクトリを指定してgrubをUSBメモリに書き込む。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mount /dev/sdb1 /mnt
sudo grub-install —target=x86_64-efi —efi-directory=/mnt —boot-directory=/mnt/boot —no-floppy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ちなみに、Macで起動するためにはEFIの下を&lt;code&gt;boot/bootx64.efi&lt;/code&gt;にしないとダメらしい。本当かしらん。まぁ、変更しておくということで。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mv /mnt/efi/boot/grubx64.efi /mnt/efi/boot/bootx64.efi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;grub.cfgを&lt;code&gt;boot/grub&lt;/code&gt;に作成する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo mkdir -p /mnt/boot/grub
sudo vi /mnt/boot/grub/grub.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;grub.cfg&lt;/code&gt;はこんな感じ。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# Load Graphical modules
insmod efi_gop
insmod efi_uga

# Load Font module
insmod font


# Setup GFXTERM along with loading unifont.pf2 font file

if loadfont &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/fonts/unifont.pf2
then
   insmod gfxterm
   set gfxmode=&amp;quot;auto&amp;quot;
   set gfxpayload=keep
   terminal_output gfxterm

   set color_normal=light-blue/black
   set color_highlight=light-cyan/blue
fi

insmod part_gpt
insmod part_msdos
insmod fat
insmod ext2

# Timeout for menu
set timeout=5

# Set default boot entry as Entry 0
set default=0

menuentry &amp;quot;Debian Install (expert mode)&amp;quot; {
  set root=(hd0,msdos1)
  linux /boot/vmlinuz root=/dev/sda1 ro video=efifb agp=off priority=low ipv6.disable=1
  initrd /boot/initrd.gz
}
menuentry &amp;quot;Debian Install&amp;quot; {
  set root=(hd0,msdos1)
  linux /boot/vmlinuz root=/dev/sda1 ro video=efifb agp=off ipv6.disable=1
  initrd /boot/initrd.gz
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでgrubの準備は完了。&lt;/p&gt;
&lt;h2&gt;debianインストーラの導入&lt;/h2&gt;
&lt;p&gt;自分はいつも&lt;a href="https://www.debian.org/devel/debian-installer/"&gt;debian開発者ページ（？）&lt;/a&gt;からインストーラを取得している。
ここで手に入るのはtesting版。だと思う。日次スナップショットはうまく起動しない場合もあるので注意。&lt;/p&gt;
&lt;p&gt;「その他のイメージ＞インストール先アーキテクチャ＞hd-media」とたどる。&lt;/p&gt;
&lt;p&gt;ここから&lt;code&gt;vmlinuz&lt;/code&gt;（カーネル）と&lt;code&gt;initrd.gz&lt;/code&gt;（初期RAMディスク）を取得する。
また、元のページから「netinst CDイメージ」も取得しておく。&lt;/p&gt;
&lt;p&gt;あとはこれを配置するだけ。USBメモリをmountし、以下のように配置する。FAT32でフォーマットしてあるとMacからでもWinからでも配置できるので便利。MacのEFIで読めるのはFATとHFS+とかだった気がするけど定かではない。FAT32なら大丈夫だった。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;ファイル&lt;/th&gt;
&lt;th align="left"&gt;配置場所&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;netinst CDイメージ（.isoファイル）&lt;/td&gt;
&lt;td align="left"&gt;USBメモリのトップ/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;vmlinuz&lt;/td&gt;
&lt;td align="left"&gt;USBメモリのトップ/boot/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;initrd.gz&lt;/td&gt;
&lt;td align="left"&gt;USBメモリのトップ/boot/&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;インストールはどうやるの？&lt;/h1&gt;
&lt;p&gt;普通にUSBメモリからEFIで起動させればOK。&lt;/p&gt;
&lt;p&gt;インストーラでパーティションを切るときに、EFI用のディレクトリを作成しないとダメ。100MBくらいで十分なはずだけど、200MBくらいを確保している。&lt;/p&gt;
&lt;p&gt;Windowsが入っているマシンとかに後からdebianを追加するときは、すでにあるEFIシステムパーティションが利用できる。もちろん、WindowsがEFIブートでインストールされていれば、の話だが。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pman0214</dc:creator><pubDate>Thu, 30 Apr 2015 12:55:00 +0900</pubDate><guid>tag:pman0214.github.io,2015-04-30:blog/debian-install-efi.html</guid><category>debian</category><category>efi</category></item><item><title>Pelican+GitHub Pagesでブログ引っ越し</title><link>http://pman0214.github.io/blog/pelican-blog-github.html</link><description>&lt;p&gt;これまで&lt;a href="http://pman0214.blog37.fc2.com/"&gt;FC2ブログ&lt;/a&gt;にお世話になってきたが、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技術系なネタが多いため、ソースコード等が書きやすいとうれしい&lt;/li&gt;
&lt;li&gt;自在なレイアウトができるとうれしい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などの理由からGitHub Pagesを使うことにした。
あんまり書かないかもしれないけど・・・。&lt;/p&gt;
&lt;p&gt;ともあれ、Pelicanを使ってこのブログを構築したので、そのときのメモ。&lt;/p&gt;
&lt;h1&gt;Pelicanを使ったブログ構築作業&lt;/h1&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;このブログはPelicanを使って静的ページを構成している。
生成に使用したソースを公開するのは気が引けるので、生成したhtmlファイル群だけを公開することとした。
このためにちょっと特殊な使い方をしている。&lt;/p&gt;
&lt;h2&gt;前提&lt;/h2&gt;
&lt;p&gt;pythonやvirtualenv、makeなどは導入されているものとする。&lt;/p&gt;
&lt;h2&gt;構築&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ローカルマシンにpelican用の環境を構築。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;適当なディレクトリを作成。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir ~/blog
cd !$
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;virtualenv環境でpelicanを導入。Markdownを使いたいので、Markdownも導入しておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virtualenv --system-site-packages ./
source bin/activate
pip install pelican
pip install Markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;ファイルを作成しておく。なお、&lt;code&gt;.DS_Store&lt;/code&gt;などはグローバルに無視する設定をしているので除外してある。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.Python&lt;/span&gt;
&lt;span class="nf"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="nf"&gt;include&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="nf"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="nf"&gt;man&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="nf"&gt;local&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="nf"&gt;output&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="nf"&gt;pip-selfcheck.json&lt;/span&gt;
&lt;span class="nf"&gt;cache&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.pyc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;を実行して各種設定を施す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2015/04/27追記:&lt;/strong&gt; 自分の場合は&lt;code&gt;pelicanconf.py&lt;/code&gt;の&lt;code&gt;SITEURL&lt;/code&gt;がうまく設定できていなかった。この設定ができていないとCSSのURLがまずいことになり、うまく動かない場合がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ここでいったんcommitしておくと幸せになれるかも。&lt;/li&gt;
&lt;li&gt;gitレポジトリを作成。&lt;code&gt;git status&lt;/code&gt;して出てきたファイルを追加してcommit。&lt;div class="highlight"&gt;&lt;pre&gt;git init .
git status
git add Makefile .gitignore develop_server.sh ...
git commit -m &amp;quot;Initial commit with pelican files.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;htmlファイル群の出力先である&lt;code&gt;output&lt;/code&gt;ディレクトリが消えないようにする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;publishconf.py&lt;/code&gt;を修正&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/publishconf.py b/publishconf.py&lt;/span&gt;
&lt;span class="gh"&gt;index 98162b2..dfb1731 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/publishconf.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/publishconf.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -16,7 +16,7 @@ RELATIVE_URLS = False&lt;/span&gt;
 FEED_ALL_ATOM = &amp;#39;feeds/all.atom.xml&amp;#39;
 CATEGORY_FEED_ATOM = &amp;#39;feeds/%s.atom.xml&amp;#39;

&lt;span class="gd"&gt;-DELETE_OUTPUT_DIRECTORY = True&lt;/span&gt;
&lt;span class="gi"&gt;+DELETE_OUTPUT_DIRECTORY = False&lt;/span&gt;

 # Following items are often useful when publishing
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Makefile&lt;/code&gt;も修正しておく。&lt;code&gt;make clean&lt;/code&gt;すると消えてしまうので。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/Makefile b/Makefile&lt;/span&gt;
&lt;span class="gh"&gt;index dc640c3..35df450 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Makefile&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Makefile&lt;/span&gt;
&lt;span class="gu"&gt;@@ -58,7 +58,7 @@ html:&lt;/span&gt;
        $(PELICAN) $(INPUTDIR) -o $(OUTPUTDIR) -s $(CONFFILE) $(PELICANOPTS)

 clean:
&lt;span class="gd"&gt;-   [ ! -d $(OUTPUTDIR) ] || rm -rf $(OUTPUTDIR)&lt;/span&gt;
&lt;span class="gi"&gt;+   [ ! -d $(OUTPUTDIR) ] || echo rm -rf $(OUTPUTDIR)&lt;/span&gt;

 regenerate:
        $(PELICAN) -r $(INPUTDIR) -o $(OUTPUTDIR) -s $(CONFFILE) $(PELICANOPTS)
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ここで再びgit add &amp;amp; git commit。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;そのままのMarkdownではGitHubに慣れている人にはツライので、各種のライブラリ（？）を導入。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mdx_linkfyとmdx_del_insを導入。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install mdx_linkify
pip install mdx_del_ins
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;に以下を追加する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;MD_EXTENSIONS = [&amp;#39;del_ins&amp;#39;, &amp;#39;fenced_code&amp;#39;, &amp;#39;codehilite(css_class=highlight)&amp;#39;, &amp;#39;tables&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;試しに記事を書いてみる&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;記事は&lt;code&gt;content&lt;/code&gt;の下に配置する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;管理を単純にするため、投稿日をファイル名とすることにした。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;touch content `date +%Y%m%d`.md
open !$
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先頭に各種情報を書いておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Pelican&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Pages&lt;/span&gt;&lt;span class="err"&gt;でブログ引っ越し&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;カテゴリ&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;  &lt;span class="err"&gt;←&lt;/span&gt;&lt;span class="n"&gt;permanent&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="err"&gt;。「この名前&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="err"&gt;」ファイルが生成される。&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pman0214&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;この記事の要約。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;htmlファイル群を生成して表示してみる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;htmlファイル群を生成。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make html
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;localでWebサーバを起動。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make serve
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あとはブラウザで&lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;を表示すればOK。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;テーマの変更&lt;/h2&gt;
&lt;p&gt;デフォルトはブログっぽくないので変更する。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;テーマを検討する。&lt;a href="http://pelicanthemes.com/"&gt;Pelican Themes&lt;/a&gt;で確認できる。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;テーマ用レポジトリを取得する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;テーマのレポジトリをsubmoduleとして追加する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git submodule add git@github.com:getpelican/pelican-themes.git themes
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先ほどのテーマのディレクトリがsubmoduleであれば、それを取得する。この記事執筆時点では&lt;a href="https://github.com/jody-frankowski/blue-penguin/"&gt;blue-penguin&lt;/a&gt;を選択した。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd themes
git submodule init blue-penguin
git submodule update blue-penguin
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;に以下のように設定する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;THEME = &amp;quot;pelican-themes/blue-penguin&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2015/04/27追記:&lt;/strong&gt; 間違ってます。正しくはこうです。&lt;div class="highlight"&gt;&lt;pre&gt;THEME = &amp;quot;themes/blue-penguin&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;公開用レポジトリの設定&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;GitHubに&lt;code&gt;blog&lt;/code&gt;という名前のレポジトリを作成。ここに公開用のhtmlファイル群をpushする。自分は&lt;a href="https://github.com/pman0214/blog"&gt;https://github.com/pman0214/blog&lt;/a&gt;を作成した。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;output&lt;/code&gt;の下をレポジトリにしてしまえばOK。ただし、レポジトリのGitHub Pageを使うため、&lt;code&gt;gh-pages&lt;/code&gt;ブランチにcommit &amp;amp; pushする必要がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;output&lt;/code&gt;ディレクトリをgitレポジトリにする。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd output
git init ./
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gh-pages&lt;/code&gt;ブランチに切り替え。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout -b gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全ファイルをadd、そしてcommit。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git add *
git commit -m &amp;quot;Article `date +%Y%m%d`.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHubにpushできるようにする。自分の場合はこんな感じ。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote add origin git@github.com:pman0214/blog.git
git push origin gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公開されたページを確認する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://account.github.com/repository&lt;/code&gt;でアクセスできるはず。&lt;/li&gt;
&lt;li&gt;このブログは&lt;a href="http://pman0214.github.io/blog"&gt;http://pman0214.github.io/blog&lt;/a&gt;となる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;参考ページ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.sotm.jp/2014/01/04/Pelican-Markdown-GithubPages-install-guide/"&gt;Human as a Serviceな日々 - Pelican + Markdown + GitHub Pagesで管理するブログの作り方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Amy Hanlon - Migrating to GitHub Pages using Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://qiita.com/5t111111/items/d745af778969bf00f038"&gt;Qiita - PelicanでGitHub Flavored Markdown(GFM)をマジで使いたい！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pman0214</dc:creator><pubDate>Sun, 26 Apr 2015 18:00:00 +0900</pubDate><guid>tag:pman0214.github.io,2015-04-26:blog/pelican-blog-github.html</guid><category>info</category><category>blog</category><category>python</category><category>pelican</category><category>github</category></item></channel></rss>